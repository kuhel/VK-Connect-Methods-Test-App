{"version":3,"sources":["App.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","actions","events","sort","onService","bind","assertThisInitialized","onServiceNew","onGroup","onUser","VKConnect","e","detail","console","log","type","indexOf","document","getElementById","value","JSON","stringify","_this2","fetchPolyfill","then","response","json","data","setState","objectSpread","service","app_id","action","params","service_new","group","user","react_default","a","createElement","vkui","activePanel","id","title","placeholder","onClick","map","eventName","input","length","parse","alert","Component","no_toolbar","ReactDOM","render","App_App"],"mappings":"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","file":"static/js/main.a1e5c240.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as UI from '@vkontakte/vkui';\nimport * as VKConnect from '@vkontakte/vk-connect';\n// import * as VKConnect from './vkui-connect/desktop';\n// import * as VKConnect from '@vkontakte/vkui-connect-desktop';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport {fetch as fetchPolyfill} from 'whatwg-fetch';\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            actions: {}\n        };\n\n        this.events = [\n            \"VKWebAppGetAuthToken\",\n            \"VKWebAppCallAPIMethod\",\n            \"VKWebAppAddToCommunity\",\n            \"VKWebAppGetGeodata\",\n            \"VKWebAppGetUserInfo\",\n            \"VKWebAppGetPhoneNumber\",\n            \"VKWebAppGetClientVersion\",\n            \"VKWebAppGetCommunityAuthToken\",\n            \"VKWebAppOpenPayForm\",\n            \"VKWebAppShare\",\n            \"VKWebAppAllowNotifications\",\n            \"VKWebAppDenyNotifications\",\n            \"VKWebAppShowWallPostBox\",\n            \"VKWebAppGetEmail\",\n            \"VKWebAppAllowMessagesFromGroup\",\n            \"VKWebAppJoinGroup\",\n            \"VKWebAppOpenApp\",\n            \"VKWebAppOpenQR\",\n            \"VKWebAppSetViewSettings\",\n            \"VKWebAppSetLocation\",\n            \"VKWebAppScroll\",\n            \"VKWebAppResizeWindow\",\n            \"VKWebAppClose\",\n        ].sort();\n\n        this.onService = this.onService.bind(this);\n        this.onServiceNew = this.onServiceNew.bind(this);\n        this.onGroup = this.onGroup.bind(this);\n        this.onUser = this.onUser.bind(this);\n    }\n\n    componentWillMount() {\n        VKConnect.subscribe(function(e) {\n            e = e.detail;\n            console.log(e);\n            let type = e['type'];\n            if (['VKWebAppUpdateInfo', 'VKWebAppUpdateInsets', 'VKWebAppUpdateConfig'].indexOf(type) === -1) {\n                document.getElementById('response').value = JSON.stringify(e);\n            }\n        });\n    }\n\n    componentDidMount() {\n        fetchPolyfill('https://extype.ru/sandbox/api.php?recipient=service')\n        .then((response) => response.json())\n        .then((data) => {\n            console.log(data);\n            this.setState({\n                actions: { ...data },\n            });\n        });\n    }\n\n    onService() {\n        if (this.state.actions.service) {\n            VKConnect.send('VKWebAppOpenPayForm', {\"app_id\": 6695435, \"action\": \"pay-to-service\", \"params\": this.state.actions.service});\n        }\n    }\n\n    onServiceNew() {\n        if (this.state.actions.service_new) {\n            VKConnect.send('VKWebAppOpenPayForm', {\"app_id\": 6695435, \"action\": \"pay-to-service\", \"params\": this.state.actions.service_new});\n        }\n    }\n\n    onGroup() {\n        if (this.state.actions.group) {\n            VKConnect.send('VKWebAppOpenPayForm', {\"app_id\": 6695435, \"action\": \"pay-to-group\", \"params\": this.state.actions.group});\n        }\n    }\n\n    onUser() {\n        if (this.state.actions.user) {\n            VKConnect.send('VKWebAppOpenPayForm', {\"app_id\": 6695435, \"action\": \"pay-to-user\", \"params\": this.state.actions.user});\n        }\n    }\n\n    render() {\n        return (\n            <UI.View activePanel=\"main\">\n                <UI.Panel id=\"main\">\n                    <UI.PanelHeader>\n                        VK Connect Test v2.3.0\n                    </UI.PanelHeader>\n                    <UI.Group title=\"Data\">\n                        <UI.FormLayout>\n                            <UI.Textarea id='data' placeholder='{\"method\": \"users.get\", \"params\": {}}' />\n                        </UI.FormLayout>\n                    </UI.Group>\n\n                    <UI.Group title=\"Response\">\n                        <UI.FormLayout>\n                            <UI.Textarea id='response' />\n                        </UI.FormLayout>\n                    </UI.Group>\n\n                    <UI.Group title=\"Pay To\">\n                        <UI.List>\n                            <UI.ListItem onClick={this.onService}>\n                                Pay To Service\n                            </UI.ListItem>\n                            <UI.ListItem onClick={this.onServiceNew}>\n                                Pay To Service New\n                            </UI.ListItem>\n                            <UI.ListItem onClick={this.onGroup}>\n                                Pay To Group\n                            </UI.ListItem>\n                            <UI.ListItem onClick={this.onUser}>\n                                Pay To User\n                            </UI.ListItem>\n                        </UI.List>\n                    </UI.Group>\n\n                    <UI.Group title=\"Event type\">\n                        <UI.List>\n                            {\n                                this.events.map(function(eventName) {\n                                    return (\n                                        <UI.ListItem onClick={() => {\n                                            let data = {};\n                                            try {\n                                                let input = document.getElementById('data').value;\n                                                if (input.length > 0) {\n                                                    data = JSON.parse(input);\n                                                }\n\n                                                VKConnect.send(eventName, data);\n                                            } catch(e) {\n                                                alert(e);\n                                            }\n                                        }\n                                        }>\n                                            {eventName}\n                                        </UI.ListItem>\n                                    );\n                                })\n                            }\n                        </UI.List>\n                    </UI.Group>\n                </UI.Panel>\n            </UI.View>\n        );\n    }\n}\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as VKConnect from '@vkontakte/vk-connect';\n// import * as VKConnect from './vkui-connect/desktop';\nimport App from './App';\n\nVKConnect.send('VKWebAppInit', {no_toolbar: false});\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}